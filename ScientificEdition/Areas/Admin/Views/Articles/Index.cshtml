@model List<Article>
@using ScientificEdition.Business
@using ScientificEdition.Data
@using ScientificEdition.Data.Entities
@using Microsoft.AspNetCore.Http
@inject CategoryManager CategoryManager

@{
    ViewData["Title"] = "Список статей";
}

<div class="container mt-5">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="/Admin">Панель керування</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">
                <a href="@Url.Action("Index")">Список статей</a>
            </li>
        </ol>
    </nav>

    <form method="get" class="mb-4">
        <div class="row">
            <div class="col-md-3">
                <label for="query" class="form-label">Пошук:</label>
                <input type="text" name="query" id="query" class="form-control" value="@Context.Request.Query["query"]" placeholder="Назва або автор..." />
            </div>

            <div class="col-md-2">
                <label for="status" class="form-label">Статус:</label>
                <select name="status" id="status" class="form-select">
                    <option value="">Всі</option>
                    @foreach (var status in Enum.GetValues<ArticleStatus>())
                    {
                        <option value="@status" selected="@(Context.Request.Query["status"] == status.ToString())">
                            @TextHelper.Text($"ArticleStatus_{status}")
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-2">
                <label for="category" class="form-label">Категорія:</label>
                <select name="category" id="category" class="form-select">
                    <option value="">Всі</option>
                    @foreach (var category in CategoryManager.GetAllCategories())
                    {
                        <option value="@category.Name" selected="@(Context.Request.Query["category"] == category.Name)">
                            @category.Name
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-2 align-self-end">
                <button type="submit" class="btn btn-primary">Фільтрувати</button>
            </div>
        </div>
    </form>

    <div class="mb-2">
        Сортувати за:
        <a href="@GetUpdatedSortingQueryString("sortField", "Title")" class="btn btn-link">Назва ↑</a>
        <a href="@GetUpdatedSortingQueryString("sortField", "Title", false)" class="btn btn-link">Назва ↓</a>
        <a href="@GetUpdatedSortingQueryString("sortField", "UploadDate")" class="btn btn-link">Дата ↑</a>
        <a href="@GetUpdatedSortingQueryString("sortField", "UploadDate", false)" class="btn btn-link">Дата ↓</a>
    </div>

    <h2 class="">Список статей</h2>
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Стаття</th>
                <th>Категорія</th>
                <th>Автор</th>
                <th>Дата завантаження</th>
                <th>Статус</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var article in Model)
            {
                var author = article.Author!;
                <tr>
                    <td>
                        <a asp-controller="Articles" asp-action="Details" asp-route-id="@article.Id">@article.Title</a>
                    </td>
                    <td>@article.Category!.Name</td>
                    <td>
                        <a asp-controller="Users" asp-action="Edit" asp-route-id="@author.Id">@author.FullName</a>
                    </td>
                    <td>@article.UploadDate.ToString("dd.MM.yyyy")</td>
                    <td>
                        <div>
                            @TextHelper.Text($"ArticleStatus_{article.Status.ToString()}")
                        </div>
                        @if (article.JournalEdition != null && (article.Status == ArticleStatus.Scheduled || article.Status == ArticleStatus.Published))
                        {
                            <a href="@Url.Action("Details", "Journals", new { id = article.JournalEditionId })">
                                @article.JournalEdition!.Title
                            </a>
                        }
                    </td>
                    <td class="text-center">
                        @if (article.Status == ArticleStatus.Approved)
                        {
                            <a href="@Url.Action("AddToJournal", new { articleId = article.Id })" class="btn btn-primary btn-sm open-modal-link">Запланувати</a>
                        }
                        <a asp-controller="Articles" asp-action="Details" asp-route-id="@article.Id" class="btn btn-info btn-sm">Деталі</a>
                        @if (article.Status != ArticleStatus.Scheduled && article.Status != ArticleStatus.Published)
                        {
                            <a asp-controller="Articles" asp-action="Delete" asp-route-id="@article.Id" class="btn btn-danger btn-sm">Видалити</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="modal fade" id="addToJournalModal" tabindex="-1" role="dialog" aria-labelledby="addToJournalModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addToJournalModalLabel">Опублікувати статтю</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modalContent">
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.open-modal-link').on('click', function (event) {
                event.preventDefault();

                const modalContent = $('#modalContent');
                $.ajax({
                    url: $(this).attr('href'),
                    type: 'GET',
                    success: function (response) {
                        modalContent.html(response);

                        $('#addToJournalModal').modal('show');
                    },
                    error: function () {
                        modalContent.html('<p class="text-danger">Не вдалося завантажити дані.</p>');
                    }
                });
            });
        });
    </script>
}

@functions {
    string GetUpdatedSortingQueryString(string field, string value, bool ascending = true)
    {
        var query = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());

        query[field] = value;
        query["sortOrder"] = ascending ? "asc" : "desc";

        return "?" + string.Join("&", query.Select(kvp => $"{kvp.Key}={Uri.EscapeDataString(kvp.Value)}"));
    }
}
